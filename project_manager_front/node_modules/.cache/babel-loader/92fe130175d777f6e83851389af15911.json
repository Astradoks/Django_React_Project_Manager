{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulb\\\\Documents\\\\Desarrollos\\\\Django_React_Project_Manager\\\\project_manager_front\\\\src\\\\Components\\\\Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CSRFToken from './csrftoken';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst csrftoken = Cookies.get('csrftoken'); // Fetch create column\n\nasync function create_column(name, id) {\n  return fetch('/create_column', {\n    method: 'POST',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      name: name,\n      project_id: id\n    })\n  }).then(response => response.json());\n} // Fetch create task\n\n\nasync function create_task(column_id, name, description, color) {\n  return fetch('/create_task', {\n    method: 'POST',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      column_id: column_id,\n      name: name,\n      description: description,\n      color: color\n    })\n  }).then(response => response.json());\n} // Fetch change task to another column\n\n\nasync function change_task_column(column_id, task_id) {\n  return fetch('/change_task_column', {\n    method: 'PUT',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      column_id: column_id,\n      task_id: task_id\n    })\n  }).then(response => response.json());\n} // Fetch edit task\n\n\nasync function edit_task(task_id, new_name, new_description, new_color) {\n  return fetch('/edit_task', {\n    method: 'PUT',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      task_id: task_id,\n      new_name: new_name,\n      new_description: new_description,\n      new_color: new_color\n    })\n  }).then(response => response.json());\n}\n\nexport default function Project(props) {\n  _s();\n\n  // Display project information\n  const [projectName, setProjectName] = useState();\n  const [projectDescription, setProjectDescription] = useState();\n  const [projectColumns, setProjectColumns] = useState([]); // Render form, render number of columns, and create a new column\n\n  const [addColumn, setAddColumn] = useState(true);\n  const [columnNum, setColumnNum] = useState(3);\n  const [columnForm, setColumnForm] = useState(false);\n  const [columnName, setColumnName] = useState(); // Render form and create a new task\n\n  const [taskForm, setTaskForm] = useState(false);\n  const [taskColumn, setTaskColumn] = useState();\n  const [taskName, setTaskName] = useState();\n  const [taskDescription, setTaskDescription] = useState();\n  const [taskColor, setTaskColor] = useState(); // Change task to another column\n\n  const [newColumnTask, setNewColumnTask] = useState(); // Render task change form and edit task form\n  // This saves the task id\n\n  const [changeTaskColumnForm, setChangeTaskColumnForm] = useState(); // New values to edit task\n\n  const [newTaskName, setNewTaskName] = useState();\n  const [newTaskDescription, setNewTaskDescription] = useState();\n  const [newTaskColor, setNewTaskColor] = useState(); // Needed to get all projects\n\n  useEffect(() => {\n    fetchProject();\n  }, []);\n\n  const fetchProject = async () => {\n    const id = props.id;\n    const response = await fetch(`/project/${id}`);\n    const data = await response.json();\n    console.log(data);\n    setProjectName(data.project.name);\n    setProjectDescription(data.project.description);\n    setProjectColumns(data.columns); // Change layout depending on number of columns\n    // Max number of columns accepted is 6\n\n    if (data.columns.length <= 3) {\n      setColumnNum(3);\n      setAddColumn(true);\n    } else if (data.columns.length === 4 || data.columns.length === 5) {\n      setColumnNum(2);\n      setAddColumn(true);\n    } else {\n      setColumnNum(2);\n      setAddColumn(false);\n    }\n  }; // Create a new column in this project\n\n\n  const handleCreateColumn = async e => {\n    e.preventDefault();\n    const data = await create_column(columnName, props.id);\n    console.log(data);\n    setColumnForm(false);\n    props.setPage('projects');\n    props.setPage('project');\n  }; // Create a new column in this project\n\n\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    const data = await create_task(taskColumn, taskName, taskDescription, taskColor);\n    console.log(data);\n    setTaskForm(false);\n    props.setPage('projects');\n    props.setPage('project');\n  }; // Display form to create task in the correct column\n\n\n  function displayTaskForm(column_id) {\n    setTaskColumn(column_id);\n    setTaskForm(true);\n  } // Change task to another column\n\n\n  const handleChangeTask = async e => {\n    e.preventDefault();\n    const data = await change_task_column(newColumnTask, changeTaskColumnForm);\n    console.log(data);\n    props.setPage('projects');\n    props.setPage('project');\n  }; // Edit task\n\n\n  const handleEditTask = async e => {\n    e.preventDefault();\n    const data = await edit_task(changeTaskColumnForm, newTaskName, newTaskDescription, newTaskColor);\n    console.log(data);\n    props.setPage('projects');\n    props.setPage('project');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: projectName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"fs-4 m-3\",\n      children: projectDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [projectColumns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: column.id,\n        className: `col-lg-${columnNum}`,\n        onMouseLeave: () => setChangeTaskColumnForm(''),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body shadow p-4 bg-white rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: column.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), column.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: task.id,\n            className: `card border-${task.color} card-body mb-3`,\n            onMouseEnter: () => {\n              setChangeTaskColumnForm(task.id);\n              setNewTaskName(task.name);\n              setNewTaskDescription(task.description);\n              setNewTaskColor(task.color);\n            },\n            children: [changeTaskColumnForm === task.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleEditTask,\n              children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                requierd: true,\n                value: newTaskName,\n                onChange: e => setNewTaskName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"5\",\n                className: \"form-control\",\n                required: true,\n                value: newTaskDescription,\n                onChange: e => setNewTaskDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                required: true,\n                onChange: e => setNewTaskColor(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Select new color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"primary\",\n                  className: \"bg-primary text-white\",\n                  children: \"Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"secondary\",\n                  className: \"bg-secondary text-white\",\n                  children: \"Grey\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"success\",\n                  className: \"bg-success text-white\",\n                  children: \"Green\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"danger\",\n                  className: \"bg-danger text-white\",\n                  children: \"Red\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"warning\",\n                  className: \"bg-warning text-white\",\n                  children: \"Yellow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"info\",\n                  className: \"bg-info text-white\",\n                  children: \"Sky Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"light\",\n                  className: \"bg-light\",\n                  children: \"Light Grey\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"dark\",\n                  className: \"bg-dark text-white\",\n                  children: \"Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn btn-outline-warning\",\n                  value: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"card-title\",\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text fw-light\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fw-light fst-italic\",\n              children: task.creation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this), changeTaskColumnForm === task.id && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleChangeTask,\n              children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: projectColumns.map(col => // Only show buttons that move task to other columns\n                column.id !== col.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-auto mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-grid gap-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-outline-primary\",\n                      onClick: () => {\n                        setNewColumnTask(col.id);\n                      },\n                      children: col.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 41\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this)), taskForm && taskColumn === column.id ?\n          /*#__PURE__*/\n\n          /* Render form to add task */\n          _jsxDEV(\"div\", {\n            className: \"card-body shadow p-4 bg-light rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleCreateTask,\n              children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Name\",\n                required: true,\n                onChange: e => setTaskName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"5\",\n                className: \"form-control\",\n                placeholder: \"Description\",\n                required: true,\n                onChange: e => setTaskDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                required: true,\n                onChange: e => setTaskColor(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Select a color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"primary\",\n                  className: \"bg-primary text-white\",\n                  children: \"Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"secondary\",\n                  className: \"bg-secondary text-white\",\n                  children: \"Grey\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"success\",\n                  className: \"bg-success text-white\",\n                  children: \"Green\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"danger\",\n                  className: \"bg-danger text-white\",\n                  children: \"Red\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"warning\",\n                  className: \"bg-warning text-white\",\n                  children: \"Yellow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"info\",\n                  className: \"bg-info text-white\",\n                  children: \"Sky Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"light\",\n                  className: \"bg-light\",\n                  children: \"Light Grey\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"dark\",\n                  className: \"bg-dark text-white\",\n                  children: \"Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn btn-outline-primary\",\n                  value: \"Create Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this) :\n          /*#__PURE__*/\n\n          /* Render button to display the form */\n          _jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => displayTaskForm(column.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body shadow-sm p-4 bg-light rounded text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"fs-6 m-1\",\n                  children: \"Add new Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)), addColumn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `col-lg-${columnNum}`,\n        children: columnForm ?\n        /*#__PURE__*/\n\n        /* Render form to add column */\n        _jsxDEV(\"div\", {\n          className: \"card-body shadow p-4 bg-light rounded\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCreateColumn,\n            children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Name\",\n              required: true,\n              onChange: e => setColumnName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"btn btn-outline-primary\",\n                value: \"Create Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }, this) :\n        /*#__PURE__*/\n\n        /* Render button to display form */\n        _jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setColumnForm(true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body shadow-sm p-4 bg-light rounded d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fs-1 m-3\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fs-5 m-3\",\n                children: \"Add new Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Project, \"7cs7yOn+6+ahtYZjfQqBz6PmVZY=\");\n\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/Users/paulb/Documents/Desarrollos/Django_React_Project_Manager/project_manager_front/src/Components/Project.jsx"],"names":["React","useState","useEffect","CSRFToken","Cookies","csrftoken","get","create_column","name","id","fetch","method","headers","body","JSON","stringify","project_id","then","response","json","create_task","column_id","description","color","change_task_column","task_id","edit_task","new_name","new_description","new_color","Project","props","projectName","setProjectName","projectDescription","setProjectDescription","projectColumns","setProjectColumns","addColumn","setAddColumn","columnNum","setColumnNum","columnForm","setColumnForm","columnName","setColumnName","taskForm","setTaskForm","taskColumn","setTaskColumn","taskName","setTaskName","taskDescription","setTaskDescription","taskColor","setTaskColor","newColumnTask","setNewColumnTask","changeTaskColumnForm","setChangeTaskColumnForm","newTaskName","setNewTaskName","newTaskDescription","setNewTaskDescription","newTaskColor","setNewTaskColor","fetchProject","data","console","log","project","columns","length","handleCreateColumn","e","preventDefault","setPage","handleCreateTask","displayTaskForm","handleChangeTask","handleEditTask","map","column","tasks","task","target","value","creation_date","col"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CSRFToken from './csrftoken';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst csrftoken = Cookies.get('csrftoken');\r\n\r\n// Fetch create column\r\nasync function create_column(name, id) {\r\n    return fetch('/create_column', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            project_id: id\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch create task\r\nasync function create_task(column_id, name, description, color) {\r\n    return fetch('/create_task', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            column_id: column_id,\r\n            name: name,\r\n            description: description,\r\n            color: color\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch change task to another column\r\nasync function change_task_column(column_id, task_id) {\r\n    return fetch('/change_task_column', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            column_id: column_id,\r\n            task_id: task_id\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch edit task\r\nasync function edit_task(task_id, new_name, new_description, new_color) {\r\n    return fetch('/edit_task', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            task_id: task_id,\r\n            new_name: new_name,\r\n            new_description: new_description,\r\n            new_color: new_color\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\nexport default function Project(props){\r\n\r\n    // Display project information\r\n    const [projectName, setProjectName] = useState();\r\n    const [projectDescription, setProjectDescription] = useState();\r\n    const [projectColumns, setProjectColumns] = useState([]);\r\n    // Render form, render number of columns, and create a new column\r\n    const [addColumn, setAddColumn] = useState(true);\r\n    const [columnNum, setColumnNum] = useState(3);\r\n    const [columnForm, setColumnForm] = useState(false);\r\n    const [columnName, setColumnName] = useState();\r\n    // Render form and create a new task\r\n    const [taskForm, setTaskForm] = useState(false);\r\n    const [taskColumn, setTaskColumn] = useState();\r\n    const [taskName, setTaskName] = useState();\r\n    const [taskDescription, setTaskDescription] = useState();\r\n    const [taskColor, setTaskColor] = useState();\r\n    // Change task to another column\r\n    const [newColumnTask, setNewColumnTask] = useState();\r\n    // Render task change form and edit task form\r\n    // This saves the task id\r\n    const [changeTaskColumnForm, setChangeTaskColumnForm] = useState();\r\n    // New values to edit task\r\n    const [newTaskName, setNewTaskName] = useState();\r\n    const [newTaskDescription, setNewTaskDescription] = useState();\r\n    const [newTaskColor, setNewTaskColor] = useState();\r\n\r\n    // Needed to get all projects\r\n    useEffect(() => {\r\n        fetchProject();\r\n    }, [])\r\n\r\n    const fetchProject = async () => {\r\n        const id = props.id;\r\n        const response = await fetch(`/project/${id}`);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setProjectName(data.project.name);\r\n        setProjectDescription(data.project.description);\r\n        setProjectColumns(data.columns);\r\n        // Change layout depending on number of columns\r\n        // Max number of columns accepted is 6\r\n        if (data.columns.length <= 3) {\r\n            setColumnNum(3);\r\n            setAddColumn(true);\r\n        } else if (data.columns.length === 4 || data.columns.length === 5 ) {\r\n            setColumnNum(2);\r\n            setAddColumn(true);\r\n        } else {\r\n            setColumnNum(2);\r\n            setAddColumn(false);\r\n        }\r\n    }\r\n\r\n    // Create a new column in this project\r\n    const handleCreateColumn = async e => {\r\n        e.preventDefault();\r\n        const data = await create_column(columnName, props.id);\r\n        console.log(data);\r\n        setColumnForm(false);\r\n        props.setPage('projects');\r\n        props.setPage('project');\r\n    }\r\n\r\n    // Create a new column in this project\r\n    const handleCreateTask = async e => {\r\n        e.preventDefault();\r\n        const data = await create_task(taskColumn, taskName, taskDescription, taskColor);\r\n        console.log(data);\r\n        setTaskForm(false);\r\n        props.setPage('projects');\r\n        props.setPage('project');\r\n    }\r\n\r\n    // Display form to create task in the correct column\r\n    function displayTaskForm(column_id) {\r\n        setTaskColumn(column_id);\r\n        setTaskForm(true);\r\n    }\r\n\r\n    // Change task to another column\r\n    const handleChangeTask = async e => {\r\n        e.preventDefault();\r\n        const data = await change_task_column(newColumnTask, changeTaskColumnForm);\r\n        console.log(data);\r\n        props.setPage('projects');\r\n        props.setPage('project');\r\n    }\r\n\r\n    // Edit task\r\n    const handleEditTask = async e => {\r\n        e.preventDefault();\r\n        const data = await edit_task(changeTaskColumnForm, newTaskName, newTaskDescription, newTaskColor);\r\n        console.log(data);\r\n        props.setPage('projects');\r\n        props.setPage('project');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{projectName}</h1>\r\n            <p className=\"fs-4 m-3\">{projectDescription}</p>\r\n            <div className=\"row\">\r\n                {/* Map all the columns from the project and render them */}\r\n                {projectColumns.map(column => (\r\n                    <div key={column.id} id={column.id} className={`col-lg-${columnNum}`} onMouseLeave={() => setChangeTaskColumnForm('')}>\r\n                        <div className=\"card-body shadow p-4 bg-white rounded\">\r\n                            <h5 className=\"card-title\">{column.name}</h5>\r\n                            <br/>\r\n                            {/* Map all tasks in this column and render them */}\r\n                            {column.tasks.map(task => (\r\n                                <div key={task.id} id={task.id} className={`card border-${task.color} card-body mb-3`} onMouseEnter={() => {\r\n                                    setChangeTaskColumnForm(task.id);\r\n                                    setNewTaskName(task.name);\r\n                                    setNewTaskDescription(task.description);\r\n                                    setNewTaskColor(task.color);\r\n                                }} >\r\n                                    {/* Change to edit when mouse enter the task */}\r\n                                    { changeTaskColumnForm === task.id ?\r\n                                        <form onSubmit={handleEditTask}>\r\n                                            <CSRFToken />\r\n                                            <input type=\"text\" className=\"form-control\" requierd value={newTaskName} onChange={e => setNewTaskName(e.target.value)} />\r\n                                            <br/>\r\n                                            <textarea rows=\"5\" className=\"form-control\" required value={newTaskDescription} onChange={e => setNewTaskDescription(e.target.value)}></textarea>\r\n                                            <br/>\r\n                                            <select className=\"form-select\" required onChange={e => setNewTaskColor(e.target.value)}>\r\n                                                <option>Select new color</option>\r\n                                                <option value=\"primary\" className=\"bg-primary text-white\">Blue</option>\r\n                                                <option value=\"secondary\" className=\"bg-secondary text-white\">Grey</option>\r\n                                                <option value=\"success\" className=\"bg-success text-white\">Green</option>\r\n                                                <option value=\"danger\" className=\"bg-danger text-white\">Red</option>\r\n                                                <option value=\"warning\" className=\"bg-warning text-white\">Yellow</option>\r\n                                                <option value=\"info\" className=\"bg-info text-white\">Sky Blue</option>\r\n                                                <option value=\"light\" className=\"bg-light\">Light Grey</option>\r\n                                                <option value=\"dark\" className=\"bg-dark text-white\">Black</option>\r\n                                            </select>\r\n                                            <br/>\r\n                                            <div className=\"d-grid gap-2\">\r\n                                                <input type=\"submit\" className=\"btn btn-outline-warning\" value=\"Edit\" />\r\n                                            </div>\r\n                                        </form>\r\n                                        :\r\n                                        <div>\r\n                                            <h6 className=\"card-title\">{task.name}</h6>\r\n                                            <p className=\"card-text fw-light\">{task.description}</p>\r\n                                        </div>\r\n                                    }\r\n                                    <p className=\"fw-light fst-italic\">{task.creation_date}</p>\r\n                                    {/* Show change task to another column form */}\r\n                                    { changeTaskColumnForm === task.id && \r\n                                        <form onSubmit={handleChangeTask}>\r\n                                            <CSRFToken />\r\n                                            <div className=\"row\">\r\n                                                {/* Map all column names to show buttons */}\r\n                                                {projectColumns.map(col => (\r\n                                                    // Only show buttons that move task to other columns\r\n                                                    column.id !== col.id &&\r\n                                                        <div className=\"col-auto mb-2\">\r\n                                                            <div className=\"d-grid gap-2\">\r\n                                                                <button type=\"submit\" className=\"btn btn-outline-primary\" onClick={() => {\r\n                                                                    setNewColumnTask(col.id);\r\n                                                                }}>{col.name}</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </form>\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                            {/* Ask if it is needed to render a button to display the form or to render the form to add a task */}\r\n                            {taskForm && taskColumn === column.id ?\r\n                                /* Render form to add task */\r\n                                <div className=\"card-body shadow p-4 bg-light rounded\">\r\n                                    <form onSubmit={handleCreateTask}>\r\n                                        <CSRFToken />\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Name\" required onChange={e => setTaskName(e.target.value)}/>\r\n                                        <br/>\r\n                                        <textarea rows=\"5\" className=\"form-control\" placeholder=\"Description\" required onChange={e => setTaskDescription(e.target.value)}></textarea>\r\n                                        <br/>\r\n                                        <select className=\"form-select\" required onChange={e => setTaskColor(e.target.value)}>\r\n                                            <option>Select a color</option>\r\n                                            <option value=\"primary\" className=\"bg-primary text-white\">Blue</option>\r\n                                            <option value=\"secondary\" className=\"bg-secondary text-white\">Grey</option>\r\n                                            <option value=\"success\" className=\"bg-success text-white\">Green</option>\r\n                                            <option value=\"danger\" className=\"bg-danger text-white\">Red</option>\r\n                                            <option value=\"warning\" className=\"bg-warning text-white\">Yellow</option>\r\n                                            <option value=\"info\" className=\"bg-info text-white\">Sky Blue</option>\r\n                                            <option value=\"light\" className=\"bg-light\">Light Grey</option>\r\n                                            <option value=\"dark\" className=\"bg-dark text-white\">Black</option>\r\n                                        </select>\r\n                                        <br/>\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <input type=\"submit\" className=\"btn btn-outline-primary\" value=\"Create Task\" />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                :\r\n                                /* Render button to display the form */\r\n                                <div className=\"d-grid gap-2\">\r\n                                    <button className=\"btn\" onClick={() => displayTaskForm(column.id)}>\r\n                                        <div className=\"card-body shadow-sm p-4 bg-light rounded text-center\">\r\n                                            <p className=\"fs-6 m-1\">Add new Task</p>\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                {/* Ask if a column can be added */}\r\n                {addColumn &&\r\n                    <div className={`col-lg-${columnNum}`}>\r\n                        {/* Ask if it is needed to render a button to display the form or to render the form to add a column */}\r\n                        {columnForm ?\r\n                            /* Render form to add column */\r\n                            <div className=\"card-body shadow p-4 bg-light rounded\">\r\n                                <form onSubmit={handleCreateColumn}>\r\n                                    <CSRFToken />\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" required onChange={e => setColumnName(e.target.value)}/>\r\n                                    <br/>\r\n                                    <div className=\"d-grid gap-2\">\r\n                                        <input type=\"submit\" className=\"btn btn-outline-primary\" value=\"Create Column\"/>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            :\r\n                            /* Render button to display form */\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button className=\"btn\" onClick={() => setColumnForm(true)}>\r\n                                    <div className=\"card-body shadow-sm p-4 bg-light rounded d-flex\">\r\n                                        <p className=\"fs-1 m-3\">+</p>\r\n                                        <p className=\"fs-5 m-3\">Add new Column</p>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}