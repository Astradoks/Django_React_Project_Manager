{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulb\\\\Documents\\\\Desarrollos\\\\Django_React_Project_Manager\\\\project_manager_front\\\\src\\\\Components\\\\Project.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CSRFToken from './csrftoken';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst csrftoken = Cookies.get('csrftoken'); // Fetch create column\n\nasync function create_column(name, id) {\n  return fetch('/create_column', {\n    method: 'POST',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      name: name,\n      project_id: id\n    })\n  }).then(response => response.json());\n} // Fetch create task\n\n\nasync function create_task(column_id, name, description, color) {\n  return fetch('/create_task', {\n    method: 'POST',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      column_id: column_id,\n      name: name,\n      description: description,\n      color: color\n    })\n  }).then(response => response.json());\n} // Fetch change task to another column\n\n\nasync function change_task_column(column_id, task_id) {\n  return fetch('/change_task_column', {\n    method: 'PUT',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      column_id: column_id,\n      task_id: task_id\n    })\n  }).then(response => response.json());\n} // Fetch edit task\n\n\nasync function edit_task(task_id, new_name, new_description, new_color) {\n  return fetch('/edit_task', {\n    method: 'PUT',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      task_id: task_id,\n      new_name: new_name,\n      new_description: new_description,\n      new_color: new_color\n    })\n  }).then(response => response.json());\n} // Fetch delete task\n\n\nasync function delete_task(task_id) {\n  return fetch('/delete_task', {\n    method: 'DELETE',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      task_id: task_id\n    })\n  }).then(response => response.json());\n} // Fetch edit column\n\n\nasync function edit_column(column_id, new_name) {\n  return fetch('/edit_column', {\n    method: 'PUT',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      column_id: column_id,\n      new_name: new_name\n    })\n  }).then(response => response.json());\n} // Fetch delete column\n\n\nasync function delete_column(column_id) {\n  return fetch('/delete_task', {\n    method: 'DELETE',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      column_id: column_id\n    })\n  }).then(response => response.json());\n}\n\nexport default function Project(props) {\n  _s();\n\n  // Display project information\n  const [projectName, setProjectName] = useState();\n  const [projectDescription, setProjectDescription] = useState();\n  const [projectColumns, setProjectColumns] = useState([]); // Render form, render number of columns, and create a new column\n\n  const [addColumn, setAddColumn] = useState(true);\n  const [columnNum, setColumnNum] = useState(3);\n  const [columnForm, setColumnForm] = useState(false);\n  const [columnName, setColumnName] = useState(); // Render form and create a new task\n\n  const [taskForm, setTaskForm] = useState(false);\n  const [taskColumn, setTaskColumn] = useState();\n  const [taskName, setTaskName] = useState();\n  const [taskDescription, setTaskDescription] = useState();\n  const [taskColor, setTaskColor] = useState(); // Change task to another column\n\n  const [newColumnTask, setNewColumnTask] = useState(); // Render task change form and edit task form\n  // This saves the task id\n\n  const [changeTaskColumnForm, setChangeTaskColumnForm] = useState(); // New values to edit task\n\n  const [newTaskName, setNewTaskName] = useState();\n  const [newTaskDescription, setNewTaskDescription] = useState();\n  const [newTaskColor, setNewTaskColor] = useState(); // Delete task\n\n  const [checked, setChecked] = useState(false); // Render form to edit column\n\n  const [editColumnForm, setEditColumnForm] = useState(''); // New values to edit column\n\n  const [newColumnName, setNewColumnName] = useState(); // Render form to edit project\n\n  const [editProjectForm, setEditProjectForm] = useState(); // New values to edit project\n\n  const [newProjectName, setNewProjectName] = useState();\n  const [newProjectDescription, setNewProjectDescription] = useState(); // Needed to get all projects\n\n  useEffect(() => {\n    fetchProject();\n  }, []); // Reload the information of the page with new changes\n\n  function reload(data) {\n    console.log(data);\n    props.setPage('projects');\n    props.setPage('project');\n  }\n\n  const fetchProject = async () => {\n    const id = props.id;\n    const response = await fetch(`/project/${id}`);\n    const data = await response.json();\n    setProjectName(data.project.name);\n    setProjectDescription(data.project.description);\n    setProjectColumns(data.columns); // Change layout depending on number of columns\n    // Max number of columns accepted is 6\n\n    if (data.columns.length <= 3) {\n      setColumnNum(3);\n      setAddColumn(true);\n    } else if (data.columns.length === 4 || data.columns.length === 5) {\n      setColumnNum(2);\n      setAddColumn(true);\n    } else {\n      setColumnNum(2);\n      setAddColumn(false);\n    }\n  }; // Create a new column in this project\n\n\n  const handleCreateColumn = async e => {\n    e.preventDefault();\n    const data = await create_column(columnName, props.id);\n    setColumnForm(false);\n    reload(data);\n  }; // Create a new column in this project\n\n\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    const data = await create_task(taskColumn, taskName, taskDescription, taskColor);\n    setTaskForm(false);\n    reload(data);\n  }; // Display form to create task in the correct column\n\n\n  function displayTaskForm(column_id) {\n    setTaskColumn(column_id);\n    setTaskForm(true);\n  } // Change task to another column\n\n\n  const handleChangeTask = async e => {\n    e.preventDefault();\n    const data = await change_task_column(newColumnTask, changeTaskColumnForm);\n    reload(data);\n  }; // Edit task\n\n\n  const handleEditTask = async e => {\n    e.preventDefault();\n    const data = await edit_task(changeTaskColumnForm, newTaskName, newTaskDescription, newTaskColor);\n    reload(data);\n  }; // Delete task\n\n\n  const handleDeleteTask = async e => {\n    e.preventDefault();\n    const data = await delete_task(changeTaskColumnForm);\n    reload(data);\n  }; // Edit Column\n\n\n  const handleEditColumn = async e => {\n    e.preventDefault();\n    const data = await edit_column();\n    reload(data);\n  }; // Delete Column\n\n\n  const handleDeleteColumn = async e => {\n    e.preventDefault();\n    const data = await delete_column();\n    reload(data);\n  }; // Edit Project\n\n\n  const handleEditProject = async e => {\n    e.preventDefault();\n    const data = await edit_project();\n    reload(data);\n  }; // Delete Project\n\n\n  const handleDeleteProject = async e => {\n    e.preventDefault();\n    const data = await delete_project();\n    reload(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [editProjectForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseEnter: () => {\n        setNewProjectName(projectName);\n        setNewProjectDescription(projectDescription);\n        setEditProjectForm(true);\n      },\n      onMouseLeave: () => setEditProjectForm(false),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditProject,\n        children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          required: true,\n          value: newProjectName,\n          onChange: e => setNewProjectName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          required: true,\n          value: newProjectDescription,\n          onChange: e => setNewProjectDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-outline-warning\",\n            value: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4 m-3\",\n        children: projectDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [projectColumns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: column.id,\n        className: `col-lg-${columnNum}`,\n        onMouseLeave: () => {\n          setChangeTaskColumnForm('');\n          setTaskColumn('');\n          setChecked('');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body shadow p-4 bg-white rounded\",\n          children: [editColumnForm === column.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            onMouseEnter: () => {\n              setNewColumnName(column.name);\n              setEditColumnForm(column.id);\n            },\n            onMouseLeave: () => setEditColumnForm(''),\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleEditColumn,\n              children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                required: true,\n                value: newColumnName,\n                onChange: e => setNewColumnName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn btn-outline-warning\",\n                  value: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: column.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this), column.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: task.id,\n            className: `card border-${task.color} card-body mb-3`,\n            onMouseEnter: () => {\n              setChangeTaskColumnForm(task.id);\n              setNewTaskName(task.name);\n              setNewTaskDescription(task.description);\n              setNewTaskColor(task.color);\n            },\n            children: [changeTaskColumnForm === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleEditTask,\n                children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  required: true,\n                  value: newTaskName,\n                  onChange: e => setNewTaskName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"5\",\n                  className: \"form-control\",\n                  required: true,\n                  value: newTaskDescription,\n                  onChange: e => setNewTaskDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  required: true,\n                  onChange: e => setNewTaskColor(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Select new color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"primary\",\n                    className: \"bg-primary text-white\",\n                    children: \"Blue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"secondary\",\n                    className: \"bg-secondary text-white\",\n                    children: \"Grey\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"success\",\n                    className: \"bg-success text-white\",\n                    children: \"Green\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"danger\",\n                    className: \"bg-danger text-white\",\n                    children: \"Red\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"warning\",\n                    className: \"bg-warning text-white\",\n                    children: \"Yellow\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"info\",\n                    className: \"bg-info text-white\",\n                    children: \"Sky Blue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"light\",\n                    className: \"bg-light\",\n                    children: \"Light Grey\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"dark\",\n                    className: \"bg-dark text-white\",\n                    children: \"Black\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid gap-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    className: \"btn btn-outline-warning\",\n                    value: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check m-2 text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-check-input\",\n                      type: \"checkbox\",\n                      id: \"delete_task\",\n                      onChange: e => setChecked(e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"delete_task\",\n                      children: \"Check\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-grid gap-2\",\n                    children: checked ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-outline-danger\",\n                      onClick: handleDeleteTask,\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 61\n                    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-outline-danger\",\n                      onClick: handleDeleteTask,\n                      disabled: true,\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"card-title\",\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text fw-light\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fw-light fst-italic\",\n              children: task.creation_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 37\n            }, this), changeTaskColumnForm === task.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Click to change column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleChangeTask,\n                children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: projectColumns.map(col => // Only show buttons that move task to other columns\n                  column.id !== col.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-auto mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"d-grid gap-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-outline-primary\",\n                        onClick: () => {\n                          setNewColumnTask(col.id);\n                        },\n                        children: col.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 65\n                    }, this)\n                  }, col.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 61\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 41\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 33\n          }, this)), taskForm && taskColumn === column.id ?\n          /*#__PURE__*/\n\n          /* Render form to add task */\n          _jsxDEV(\"div\", {\n            className: \"card-body shadow p-4 bg-light rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleCreateTask,\n              children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                required: true,\n                onChange: e => setTaskColor(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"primary\",\n                  className: \"bg-primary text-white\",\n                  children: \"Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"secondary\",\n                  className: \"bg-secondary text-white\",\n                  children: \"Grey\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"success\",\n                  className: \"bg-success text-white\",\n                  children: \"Green\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"danger\",\n                  className: \"bg-danger text-white\",\n                  children: \"Red\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"warning\",\n                  className: \"bg-warning text-white\",\n                  children: \"Yellow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"info\",\n                  className: \"bg-info text-white\",\n                  children: \"Sky Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"light\",\n                  className: \"bg-light\",\n                  children: \"Light Grey\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"dark\",\n                  className: \"bg-dark text-white\",\n                  children: \"Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"Name\",\n                required: true,\n                onChange: e => setTaskName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"5\",\n                className: \"form-control\",\n                placeholder: \"Description\",\n                required: true,\n                onChange: e => setTaskDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn btn-outline-primary\",\n                  value: \"Create Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 33\n          }, this) :\n          /*#__PURE__*/\n\n          /* Render button to display the form */\n          _jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => displayTaskForm(column.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body shadow-sm p-4 bg-light rounded text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"fs-6 m-1\",\n                  children: \"Add new Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }, this)), addColumn && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `col-lg-${columnNum}`,\n        onMouseLeave: () => setColumnForm(false),\n        children: columnForm ?\n        /*#__PURE__*/\n\n        /* Render form to add column */\n        _jsxDEV(\"div\", {\n          className: \"card-body shadow p-4 bg-light rounded\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCreateColumn,\n            children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Name\",\n              required: true,\n              onChange: e => setColumnName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"btn btn-outline-primary\",\n                value: \"Create Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 29\n        }, this) :\n        /*#__PURE__*/\n\n        /* Render button to display form */\n        _jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setColumnForm(true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body shadow-sm p-4 bg-light rounded d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fs-1 m-3\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fs-5 m-3\",\n                children: \"Add new Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Project, \"vRjOjyc4HEUxQMOcnahyNDnizGQ=\");\n\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/Users/paulb/Documents/Desarrollos/Django_React_Project_Manager/project_manager_front/src/Components/Project.jsx"],"names":["React","useState","useEffect","CSRFToken","Cookies","csrftoken","get","create_column","name","id","fetch","method","headers","body","JSON","stringify","project_id","then","response","json","create_task","column_id","description","color","change_task_column","task_id","edit_task","new_name","new_description","new_color","delete_task","edit_column","delete_column","Project","props","projectName","setProjectName","projectDescription","setProjectDescription","projectColumns","setProjectColumns","addColumn","setAddColumn","columnNum","setColumnNum","columnForm","setColumnForm","columnName","setColumnName","taskForm","setTaskForm","taskColumn","setTaskColumn","taskName","setTaskName","taskDescription","setTaskDescription","taskColor","setTaskColor","newColumnTask","setNewColumnTask","changeTaskColumnForm","setChangeTaskColumnForm","newTaskName","setNewTaskName","newTaskDescription","setNewTaskDescription","newTaskColor","setNewTaskColor","checked","setChecked","editColumnForm","setEditColumnForm","newColumnName","setNewColumnName","editProjectForm","setEditProjectForm","newProjectName","setNewProjectName","newProjectDescription","setNewProjectDescription","fetchProject","reload","data","console","log","setPage","project","columns","length","handleCreateColumn","e","preventDefault","handleCreateTask","displayTaskForm","handleChangeTask","handleEditTask","handleDeleteTask","handleEditColumn","handleDeleteColumn","handleEditProject","edit_project","handleDeleteProject","delete_project","target","value","map","column","tasks","task","creation_date","col"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport CSRFToken from './csrftoken';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst csrftoken = Cookies.get('csrftoken');\r\n\r\n// Fetch create column\r\nasync function create_column(name, id) {\r\n    return fetch('/create_column', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            project_id: id\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch create task\r\nasync function create_task(column_id, name, description, color) {\r\n    return fetch('/create_task', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            column_id: column_id,\r\n            name: name,\r\n            description: description,\r\n            color: color\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch change task to another column\r\nasync function change_task_column(column_id, task_id) {\r\n    return fetch('/change_task_column', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            column_id: column_id,\r\n            task_id: task_id\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch edit task\r\nasync function edit_task(task_id, new_name, new_description, new_color) {\r\n    return fetch('/edit_task', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            task_id: task_id,\r\n            new_name: new_name,\r\n            new_description: new_description,\r\n            new_color: new_color\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch delete task\r\nasync function delete_task(task_id) {\r\n    return fetch('/delete_task', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            task_id: task_id\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch edit column\r\nasync function edit_column(column_id, new_name) {\r\n    return fetch('/edit_column', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            column_id: column_id,\r\n            new_name: new_name\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\n// Fetch delete column\r\nasync function delete_column(column_id) {\r\n    return fetch('/delete_task', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n            column_id: column_id\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\nexport default function Project(props){\r\n\r\n    // Display project information\r\n    const [projectName, setProjectName] = useState();\r\n    const [projectDescription, setProjectDescription] = useState();\r\n    const [projectColumns, setProjectColumns] = useState([]);\r\n    // Render form, render number of columns, and create a new column\r\n    const [addColumn, setAddColumn] = useState(true);\r\n    const [columnNum, setColumnNum] = useState(3);\r\n    const [columnForm, setColumnForm] = useState(false);\r\n    const [columnName, setColumnName] = useState();\r\n    // Render form and create a new task\r\n    const [taskForm, setTaskForm] = useState(false);\r\n    const [taskColumn, setTaskColumn] = useState();\r\n    const [taskName, setTaskName] = useState();\r\n    const [taskDescription, setTaskDescription] = useState();\r\n    const [taskColor, setTaskColor] = useState();\r\n    // Change task to another column\r\n    const [newColumnTask, setNewColumnTask] = useState();\r\n    // Render task change form and edit task form\r\n    // This saves the task id\r\n    const [changeTaskColumnForm, setChangeTaskColumnForm] = useState();\r\n    // New values to edit task\r\n    const [newTaskName, setNewTaskName] = useState();\r\n    const [newTaskDescription, setNewTaskDescription] = useState();\r\n    const [newTaskColor, setNewTaskColor] = useState();\r\n    // Delete task\r\n    const [checked, setChecked] = useState(false);\r\n    // Render form to edit column\r\n    const [editColumnForm, setEditColumnForm] = useState('');\r\n    // New values to edit column\r\n    const [newColumnName, setNewColumnName] = useState();\r\n    // Render form to edit project\r\n    const [editProjectForm, setEditProjectForm] = useState();\r\n    // New values to edit project\r\n    const [newProjectName, setNewProjectName] = useState();\r\n    const [newProjectDescription, setNewProjectDescription] = useState();\r\n\r\n    // Needed to get all projects\r\n    useEffect(() => {\r\n        fetchProject();\r\n    }, [])\r\n\r\n    // Reload the information of the page with new changes\r\n    function reload(data) {\r\n        console.log(data);\r\n        props.setPage('projects');\r\n        props.setPage('project');\r\n    }\r\n\r\n    const fetchProject = async () => {\r\n        const id = props.id;\r\n        const response = await fetch(`/project/${id}`);\r\n        const data = await response.json();\r\n        setProjectName(data.project.name);\r\n        setProjectDescription(data.project.description);\r\n        setProjectColumns(data.columns);\r\n        // Change layout depending on number of columns\r\n        // Max number of columns accepted is 6\r\n        if (data.columns.length <= 3) {\r\n            setColumnNum(3);\r\n            setAddColumn(true);\r\n        } else if (data.columns.length === 4 || data.columns.length === 5 ) {\r\n            setColumnNum(2);\r\n            setAddColumn(true);\r\n        } else {\r\n            setColumnNum(2);\r\n            setAddColumn(false);\r\n        }\r\n    }\r\n\r\n    // Create a new column in this project\r\n    const handleCreateColumn = async e => {\r\n        e.preventDefault();\r\n        const data = await create_column(columnName, props.id);\r\n        setColumnForm(false);\r\n        reload(data);\r\n    }\r\n\r\n    // Create a new column in this project\r\n    const handleCreateTask = async e => {\r\n        e.preventDefault();\r\n        const data = await create_task(taskColumn, taskName, taskDescription, taskColor);\r\n        setTaskForm(false);\r\n        reload(data);\r\n    }\r\n\r\n    // Display form to create task in the correct column\r\n    function displayTaskForm(column_id) {\r\n        setTaskColumn(column_id);\r\n        setTaskForm(true);\r\n    }\r\n\r\n    // Change task to another column\r\n    const handleChangeTask = async e => {\r\n        e.preventDefault();\r\n        const data = await change_task_column(newColumnTask, changeTaskColumnForm);\r\n        reload(data);\r\n    }\r\n\r\n    // Edit task\r\n    const handleEditTask = async e => {\r\n        e.preventDefault();\r\n        const data = await edit_task(changeTaskColumnForm, newTaskName, newTaskDescription, newTaskColor);\r\n        reload(data);\r\n    }\r\n\r\n    // Delete task\r\n    const handleDeleteTask = async e => {\r\n        e.preventDefault();\r\n        const data = await delete_task(changeTaskColumnForm);\r\n        reload(data);\r\n    }\r\n\r\n    // Edit Column\r\n    const handleEditColumn = async e => {\r\n        e.preventDefault();\r\n        const data = await edit_column();\r\n        reload(data);\r\n    }\r\n\r\n    // Delete Column\r\n    const handleDeleteColumn = async e => {\r\n        e.preventDefault();\r\n        const data = await delete_column();\r\n        reload(data);\r\n    }\r\n\r\n    // Edit Project\r\n    const handleEditProject = async e => {\r\n        e.preventDefault();\r\n        const data = await edit_project();\r\n        reload(data);\r\n    }\r\n\r\n    // Delete Project\r\n    const handleDeleteProject = async e => {\r\n        e.preventDefault();\r\n        const data = await delete_project();\r\n        reload(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { editProjectForm ?\r\n                <div onMouseEnter={() => {\r\n                    setNewProjectName(projectName);\r\n                    setNewProjectDescription(projectDescription);\r\n                    setEditProjectForm(true);\r\n                }} onMouseLeave={() => setEditProjectForm(false)}>\r\n                    <form onSubmit={handleEditProject}>\r\n                        <CSRFToken />\r\n                        <input type=\"text\" className=\"form-control\" required value={newProjectName} onChange={e => setNewProjectName(e.target.value)} />\r\n                        <br/>\r\n                        <textarea rows=\"5\" className=\"form-control\" required value={newProjectDescription} onChange={e => setNewProjectDescription(e.target.value)}></textarea>\r\n                        <br/>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <input type=\"submit\" className=\"btn btn-outline-warning\" value=\"Edit\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1>{projectName}</h1>\r\n                    <p className=\"fs-4 m-3\">{projectDescription}</p>\r\n                </div>\r\n            }\r\n            <div className=\"row\">\r\n                {/* Map all the columns from the project and render them */}\r\n                {projectColumns.map(column => (\r\n                    <div key={column.id} id={column.id} className={`col-lg-${columnNum}`} onMouseLeave={() => {\r\n                        setChangeTaskColumnForm('');\r\n                        setTaskColumn('');\r\n                        setChecked('');\r\n                    }}>\r\n                        <div className=\"card-body shadow p-4 bg-white rounded\">\r\n                            { editColumnForm === column.id?\r\n                                <div onMouseEnter={() => {\r\n                                    setNewColumnName(column.name);\r\n                                    setEditColumnForm(column.id);\r\n                                }} onMouseLeave={() => setEditColumnForm('')}>\r\n                                    <form onSubmit={handleEditColumn}>\r\n                                        <CSRFToken />\r\n                                        <input type=\"text\" className=\"form-control\" required value={newColumnName} onChange={e => setNewColumnName(e.target.value)} />\r\n                                        <br/>\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <input type=\"submit\" className=\"btn btn-outline-warning\" value=\"Edit\" />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                :\r\n                                <h5 className=\"card-title\">{column.name}</h5>\r\n                            }\r\n                            <br/>\r\n                            {/* Map all tasks in this column and render them */}\r\n                            {column.tasks.map(task => (\r\n                                <div key={task.id} id={task.id} className={`card border-${task.color} card-body mb-3`} onMouseEnter={() => {\r\n                                    setChangeTaskColumnForm(task.id);\r\n                                    setNewTaskName(task.name);\r\n                                    setNewTaskDescription(task.description);\r\n                                    setNewTaskColor(task.color);\r\n                                }} >\r\n                                    {/* Change to edit when mouse enter the task */}\r\n                                    { changeTaskColumnForm === task.id ?\r\n                                        <div>\r\n                                            <form onSubmit={handleEditTask}>\r\n                                                <CSRFToken />\r\n                                                <input type=\"text\" className=\"form-control\" required value={newTaskName} onChange={e => setNewTaskName(e.target.value)} />\r\n                                                <br/>\r\n                                                <textarea rows=\"5\" className=\"form-control\" required value={newTaskDescription} onChange={e => setNewTaskDescription(e.target.value)}></textarea>\r\n                                                <br/>\r\n                                                <select className=\"form-select\" required onChange={e => setNewTaskColor(e.target.value)}>\r\n                                                    <option>Select new color</option>\r\n                                                    <option value=\"primary\" className=\"bg-primary text-white\">Blue</option>\r\n                                                    <option value=\"secondary\" className=\"bg-secondary text-white\">Grey</option>\r\n                                                    <option value=\"success\" className=\"bg-success text-white\">Green</option>\r\n                                                    <option value=\"danger\" className=\"bg-danger text-white\">Red</option>\r\n                                                    <option value=\"warning\" className=\"bg-warning text-white\">Yellow</option>\r\n                                                    <option value=\"info\" className=\"bg-info text-white\">Sky Blue</option>\r\n                                                    <option value=\"light\" className=\"bg-light\">Light Grey</option>\r\n                                                    <option value=\"dark\" className=\"bg-dark text-white\">Black</option>\r\n                                                </select>\r\n                                                <br/>\r\n                                                <div className=\"d-grid gap-2\">\r\n                                                    <input type=\"submit\" className=\"btn btn-outline-warning\" value=\"Edit\" />\r\n                                                </div>\r\n                                                <br/>\r\n                                            </form>\r\n                                            {/* Option to delete the task */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-auto\">\r\n                                                    <div className=\"form-check m-2 text-center\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"delete_task\" onChange={(e) => setChecked(e.target.checked)} />\r\n                                                        <label htmlFor=\"delete_task\">Check</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-auto\">\r\n                                                    <div className=\"d-grid gap-2\">\r\n                                                        { checked ?\r\n                                                            <button className=\"btn btn-outline-danger\" onClick={handleDeleteTask} >Delete</button>\r\n                                                            :\r\n                                                            <button className=\"btn btn-outline-danger\" onClick={handleDeleteTask} disabled>Delete</button>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <br/>\r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n                                            <h6 className=\"card-title\">{task.name}</h6>\r\n                                            <p className=\"card-text fw-light\">{task.description}</p>\r\n                                        </div>\r\n                                    }\r\n                                    <p className=\"fw-light fst-italic\">{task.creation_date}</p>\r\n                                    {/* Show change task to another column form */}\r\n                                    { changeTaskColumnForm === task.id && \r\n                                        <div>\r\n                                            <p>Click to change column</p>\r\n                                            <form onSubmit={handleChangeTask}>\r\n                                                <CSRFToken />\r\n                                                <div className=\"row\">\r\n                                                    {/* Map all column names to show buttons */}\r\n                                                    {projectColumns.map(col => (\r\n                                                        // Only show buttons that move task to other columns\r\n                                                        column.id !== col.id &&\r\n                                                            <div key={col.id} className=\"col-auto mb-2\">\r\n                                                                <div className=\"d-grid gap-2\">\r\n                                                                    <button type=\"submit\" className=\"btn btn-outline-primary\" onClick={() => {\r\n                                                                        setNewColumnTask(col.id);\r\n                                                                    }}>{col.name}</button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                            {/* Ask if it is needed to render a button to display the form or to render the form to add a task */}\r\n                            {taskForm && taskColumn === column.id ?\r\n                                /* Render form to add task */\r\n                                <div className=\"card-body shadow p-4 bg-light rounded\">\r\n                                    <form onSubmit={handleCreateTask}>\r\n                                        <CSRFToken />\r\n                                        <select className=\"form-select\" required onChange={e => setTaskColor(e.target.value)}>\r\n                                            <option value=''>Select a color</option>\r\n                                            <option value=\"primary\" className=\"bg-primary text-white\">Blue</option>\r\n                                            <option value=\"secondary\" className=\"bg-secondary text-white\">Grey</option>\r\n                                            <option value=\"success\" className=\"bg-success text-white\">Green</option>\r\n                                            <option value=\"danger\" className=\"bg-danger text-white\">Red</option>\r\n                                            <option value=\"warning\" className=\"bg-warning text-white\">Yellow</option>\r\n                                            <option value=\"info\" className=\"bg-info text-white\">Sky Blue</option>\r\n                                            <option value=\"light\" className=\"bg-light\">Light Grey</option>\r\n                                            <option value=\"dark\" className=\"bg-dark text-white\">Black</option>\r\n                                        </select>\r\n                                        <br/>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Name\" required onChange={e => setTaskName(e.target.value)}/>\r\n                                        <br/>\r\n                                        <textarea rows=\"5\" className=\"form-control\" placeholder=\"Description\" required onChange={e => setTaskDescription(e.target.value)}></textarea>\r\n                                        <br/>\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <input type=\"submit\" className=\"btn btn-outline-primary\" value=\"Create Task\" />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                :\r\n                                /* Render button to display the form */\r\n                                <div className=\"d-grid gap-2\">\r\n                                    <button className=\"btn\" onClick={() => displayTaskForm(column.id)}>\r\n                                        <div className=\"card-body shadow-sm p-4 bg-light rounded text-center\">\r\n                                            <p className=\"fs-6 m-1\">Add new Task</p>\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                {/* Ask if a column can be added */}\r\n                {addColumn &&\r\n                    <div className={`col-lg-${columnNum}`} onMouseLeave={() => setColumnForm(false)}>\r\n                        {/* Ask if it is needed to render a button to display the form or to render the form to add a column */}\r\n                        {columnForm ?\r\n                            /* Render form to add column */\r\n                            <div className=\"card-body shadow p-4 bg-light rounded\">\r\n                                <form onSubmit={handleCreateColumn}>\r\n                                    <CSRFToken />\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" required onChange={e => setColumnName(e.target.value)}/>\r\n                                    <br/>\r\n                                    <div className=\"d-grid gap-2\">\r\n                                        <input type=\"submit\" className=\"btn btn-outline-primary\" value=\"Create Column\"/>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            :\r\n                            /* Render button to display form */\r\n                            <div className=\"d-grid gap-2\" >\r\n                                <button className=\"btn\" onClick={() => setColumnForm(true)}>\r\n                                    <div className=\"card-body shadow-sm p-4 bg-light rounded d-flex\">\r\n                                        <p className=\"fs-1 m-3\">+</p>\r\n                                        <p className=\"fs-5 m-3\">Add new Column</p>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}