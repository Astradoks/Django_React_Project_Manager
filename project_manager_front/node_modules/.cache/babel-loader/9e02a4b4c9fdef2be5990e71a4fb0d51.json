{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulb\\\\Documents\\\\Desarrollos\\\\Django_React_Project_Manager\\\\project_manager_front\\\\src\\\\Components\\\\Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CSRFToken from './csrftoken';\nimport Cookies from 'js-cookie'; // Get the csrf_token so that post can be made \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst csrftoken = Cookies.get('csrftoken'); // Login function that post to create_project url and return a message from the backend\n\nasync function create_project(name, description, category) {\n  return fetch('/create_project', {\n    method: 'POST',\n    headers: {\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify({\n      name: name,\n      description: description,\n      category: category\n    })\n  }).then(response => response.json());\n}\n\nexport default function Projects(props) {\n  _s();\n\n  const [projectForm, setProjectForm] = useState(false);\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n  const [category, setCategory] = useState();\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    const response = await fetch('projects/all');\n    const data = await response.json();\n  }; // Calls the create_project function and set projectId and page to render the page of the new project\n\n\n  const handleCreateProject = async e => {\n    e.preventDefault();\n    const data = await create_project(name, description, category);\n    setProjectForm(false);\n    console.log(data.message);\n    console.log(data.id);\n    props.setProjectId(data.id);\n    props.setPage('project');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [props.projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: project.id,\n        className: \"col-lg-3 col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => {\n              props.setPage('project');\n              props.setProjectId(project.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body shadow p-4 bg-white rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: project.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text fw-light\",\n                children: [\"Category: \", project.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fw-light fst-italic\",\n                children: project.creation_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: projectForm ?\n        /*#__PURE__*/\n\n        /* Render form to add project */\n        _jsxDEV(\"div\", {\n          className: \"card-body shadow p-4 bg-light rounded\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCreateProject,\n            children: [/*#__PURE__*/_jsxDEV(CSRFToken, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Name\",\n              required: true,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"5\",\n              className: \"form-control\",\n              placeholder: \"Description\",\n              required: true,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Category\",\n              required: true,\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"btn btn-outline-primary\",\n                value: \"Create Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this) :\n        /*#__PURE__*/\n\n        /* Render button to display form */\n        _jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setProjectForm(true),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body shadow-sm p-4 bg-light rounded d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fs-1 m-3\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"fs-5 m-3\",\n                children: \"Click here to add a new project!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Projects, \"vpCBBAV7oYyesSL51rLs5PcdekQ=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/paulb/Documents/Desarrollos/Django_React_Project_Manager/project_manager_front/src/Components/Projects.jsx"],"names":["React","useState","CSRFToken","Cookies","csrftoken","get","create_project","name","description","category","fetch","method","headers","body","JSON","stringify","then","response","json","Projects","props","projectForm","setProjectForm","setName","setDescription","setCategory","useEffect","fetchCategories","data","handleCreateProject","e","preventDefault","console","log","message","id","setProjectId","setPage","projects","map","project","creation_date","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAACE,GAAR,CAAY,WAAZ,CAAlB,C,CAEA;;AACA,eAAeC,cAAf,CAA8BC,IAA9B,EAAoCC,WAApC,EAAiDC,QAAjD,EAA2D;AACvD,SAAOC,KAAK,CAAC,iBAAD,EAAoB;AAC5BC,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACP,qBAAeR;AADR,KAFmB;AAK5BS,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,MAAAA,IAAI,EAAEA,IADa;AAEnBC,MAAAA,WAAW,EAAEA,WAFM;AAGnBC,MAAAA,QAAQ,EAAEA;AAHS,KAAf;AALsB,GAApB,CAAL,CAWJO,IAXI,CAWCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXb,CAAP;AAYH;;AAED,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAEnC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACM,IAAD,EAAOgB,OAAP,IAAkBtB,QAAQ,EAAhC;AACA,QAAM,CAACO,WAAD,EAAcgB,cAAd,IAAgCvB,QAAQ,EAA9C;AACA,QAAM,CAACQ,QAAD,EAAWgB,WAAX,IAA0BxB,QAAQ,EAAxC;AAEAyB,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,eAAe,GAAG,YAAY;AAChC,UAAMV,QAAQ,GAAG,MAAMP,KAAK,CAAC,cAAD,CAA5B;AACA,UAAMkB,IAAI,GAAG,MAAMX,QAAQ,CAACC,IAAT,EAAnB;AACH,GAHD,CAXmC,CAgBnC;;;AACA,QAAMW,mBAAmB,GAAG,MAAMC,CAAN,IAAW;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMH,IAAI,GAAG,MAAMtB,cAAc,CAACC,IAAD,EAAOC,WAAP,EAAoBC,QAApB,CAAjC;AACAa,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,OAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACO,EAAjB;AACAf,IAAAA,KAAK,CAACgB,YAAN,CAAmBR,IAAI,CAACO,EAAxB;AACAf,IAAAA,KAAK,CAACiB,OAAN,CAAc,SAAd;AACH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAES;AAAA;AAAA;AAAA;AAAA,YAFT,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBAEKjB,KAAK,CAACkB,QAAN,CAAeC,GAAf,CAAmBC,OAAO,iBACvB;AAAsB,QAAA,EAAE,EAAEA,OAAO,CAACL,EAAlC;AAAsC,QAAA,SAAS,EAAC,mBAAhD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAwB,YAAA,OAAO,EAAE,MAAM;AAC/Bf,cAAAA,KAAK,CAACiB,OAAN,CAAc,SAAd;AACAjB,cAAAA,KAAK,CAACgB,YAAN,CAAmBI,OAAO,CAACL,EAA3B;AACH,aAHL;AAAA,mCAII;AAAK,cAAA,SAAS,EAAC,uCAAf;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BK,OAAO,CAACjC;AAApC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,0BAA0BiC,OAAO,CAAChC;AAAlC;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAG,gBAAA,SAAS,EAAC,oBAAb;AAAA,yCAA6CgC,OAAO,CAAC/B,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAG,gBAAA,SAAS,EAAC,qBAAb;AAAA,0BAAoC+B,OAAO,CAACC;AAA5C;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA,SAAUD,OAAO,CAACL,EAAlB;AAAA;AAAA;AAAA;AAAA,cADH,CAFL,eAoBI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAEKd,WAAW;AAAA;;AACR;AACA;AAAK,UAAA,SAAS,EAAC,uCAAf;AAAA,iCACI;AAAM,YAAA,QAAQ,EAAEQ,mBAAhB;AAAA,oCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,WAAW,EAAC,MAAxD;AAA+D,cAAA,QAAQ,MAAvE;AAAwE,cAAA,QAAQ,EAAEC,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACY,MAAF,CAASC,KAAV;AAA9F;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAU,cAAA,IAAI,EAAC,GAAf;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,WAAW,EAAC,aAAxD;AAAsE,cAAA,QAAQ,MAA9E;AAA+E,cAAA,QAAQ,EAAEb,CAAC,IAAIN,cAAc,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV;AAA5G;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,WAAW,EAAC,UAAxD;AAAmE,cAAA,QAAQ,MAA3E;AAA4E,cAAA,QAAQ,EAAEb,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACY,MAAF,CAASC,KAAV;AAAtG;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,SAAS,EAAC,yBAA/B;AAAyD,gBAAA,KAAK,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFQ;AAAA;;AAiBR;AACA;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAwB,YAAA,OAAO,EAAE,MAAMrB,cAAc,CAAC,IAAD,CAArD;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,iDAAf;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AApBR;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2DH;;GAtFuBH,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport CSRFToken from './csrftoken';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Get the csrf_token so that post can be made \r\nconst csrftoken = Cookies.get('csrftoken');\r\n\r\n// Login function that post to create_project url and return a message from the backend\r\nasync function create_project(name, description, category) {\r\n    return fetch('/create_project', {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-CSRFToken': csrftoken\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          description: description,\r\n          category: category\r\n        })\r\n      })\r\n      .then(response => response.json());\r\n}\r\n\r\nexport default function Projects(props){\r\n\r\n    const [projectForm, setProjectForm] = useState(false);\r\n    const [name, setName] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [category, setCategory] = useState();\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, [])\r\n\r\n    const fetchCategories = async () => {\r\n        const response = await fetch('projects/all');\r\n        const data = await response.json();\r\n    }\r\n\r\n    // Calls the create_project function and set projectId and page to render the page of the new project\r\n    const handleCreateProject = async e => {\r\n        e.preventDefault();\r\n        const data = await create_project(name, description, category);\r\n        setProjectForm(false);\r\n        console.log(data.message);\r\n        console.log(data.id);\r\n        props.setProjectId(data.id);\r\n        props.setPage('project');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Projects</h1>\r\n            <br/><br/>\r\n            <div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {/* Map all the projects from this user and render them */}\r\n                {props.projects.map(project => (\r\n                    <div key={project.id} id={project.id} className=\"col-lg-3 col-md-4\">\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button className=\"btn\" onClick={() => {\r\n                                    props.setPage('project');\r\n                                    props.setProjectId(project.id);\r\n                                }}>\r\n                                <div className=\"card-body shadow p-4 bg-white rounded\">\r\n                                    <h5 className=\"card-title\">{project.name}</h5>\r\n                                    <p className=\"card-text\">{project.description}</p>\r\n                                    <p className=\"card-text fw-light\">Category: {project.category}</p>\r\n                                    <p className=\"fw-light fst-italic\">{project.creation_date}</p>\r\n                                </div>\r\n                            </button>\r\n                        </div>\r\n                        <br/>\r\n                    </div>\r\n                ))}\r\n                <div className=\"col-md-3\">\r\n                    {/* Ask if it is needed to render a button to display the form or to render the form to add a project */}\r\n                    {projectForm ?\r\n                        /* Render form to add project */\r\n                        <div className=\"card-body shadow p-4 bg-light rounded\">\r\n                            <form onSubmit={handleCreateProject}>\r\n                                <CSRFToken />\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Name\" required onChange={e => setName(e.target.value)}/>\r\n                                <br/>\r\n                                <textarea rows=\"5\" className=\"form-control\" placeholder=\"Description\" required onChange={e => setDescription(e.target.value)}></textarea>\r\n                                <br/>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Category\" required onChange={e => setCategory(e.target.value)}/>\r\n                                <br/>\r\n                                <div className=\"d-grid gap-2\">\r\n                                    <input type=\"submit\" className=\"btn btn-outline-primary\" value=\"Create Project\"/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        :\r\n                        /* Render button to display form */\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button className=\"btn\" onClick={() => setProjectForm(true)}>\r\n                                <div className=\"card-body shadow-sm p-4 bg-light rounded d-flex\">\r\n                                    <p className=\"fs-1 m-3\">+</p>\r\n                                    <p className=\"fs-5 m-3\">Click here to add a new project!</p>\r\n                                </div>\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}